@page "/catalog"
@inject GamesClient Client
@inject NavigationManager NavigationManager
@attribute [StreamRendering]

<PageTitle>Game Catalog</PageTitle>

@if (errorList.Count > 0)
{
    <div class="modal-body">
        @foreach (var error in errorList)
        {
            <div class="alert alert-danger">@error</div>
        }
    </div>
}

<div class="row mt-2">
    <div class="col">
        <a class="btn btn-primary" role="button" href="/catalog/editgame">New Game</a>
    </div>
</div>

@if (games is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped table-bordered table-hover mt-3">
        <thead class="table-dark">
            <th>Name</th>
            <th>Genre</th>
            <th class="text-end">Price</th>
            <th>Release Date</th>
            <th></th>
        </thead>
        <tbody>
            @foreach (var game in games)
            {
                <tr>
                    <td>@game.Name</td>
                    <td>@game.Genre</td>
                    <td class="text-end">$@game.Price</td>
                    <td>@game.ReleaseDate</td>
                    <td>
                        <div class="d-flex">
                            <a class="btn btn-primary me-2" role="button" href="@GameUrl(game.Id)">
                                <i class="bi bi-pencil"></i>
                            </a>
                            <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="@GetDeleteModalId(game)">
                                <i class="bi bi-x-lg"></i>
                            </button>
                        </div>
                        <DeleteGame Game="@game" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<form @formname="delete-game-form" @onsubmit="@ConfirmDeleteAsync"></form>

@code {
    private GameSummary[]? games;

    [SupplyParameterFromForm]
    private Guid? GameIdToDelete { get; set; }

    private List<string> errorList = [];

    protected override async Task OnInitializedAsync()
    {
        games = await Client.GetGamesAsync();
    }

    private static string GameUrl(Guid id) => $"/catalog/editgame/{id}";

    private string GetDeleteModalId(GameSummary game)
    {
        return $"#{DeleteGame.GetModalId(game)}";
    }
    private async Task ConfirmDeleteAsync()
    {
        errorList.Clear();
        var result = await Client.DeleteGameAsync(GameIdToDelete!.Value);

        if (result.Succeeded)
        {
            NavigationManager.Refresh();
        }
        else
        {
            errorList = result.Errors;
        }
    }
}